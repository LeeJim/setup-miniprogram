"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SummerCompiler=void 0;const tslib_1=require("tslib"),plugingraph_1=require("./graph/plugingraph"),appgraph_1=require("./graph/appgraph"),path_1=(0,tslib_1.__importDefault)(require("path")),reactiveCache_1=require("../core/json/reactiveCache"),initPlugin_1=require("./initPlugin"),lodash_1=require("lodash"),locales_1=(0,tslib_1.__importDefault)(require("../utils/locales/locales")),plugin_driver_1=require("./plugin_driver"),persist_cache_1=(0,tslib_1.__importDefault)(require("./persist_cache")),tools_1=require("../utils/tools");let proxyProject;function initProxyProjectForJSON(i){if(proxyProject&&proxyProject.projectPath!==i.projectPath&&(proxyProject.clearResolver(),proxyProject=void 0),!proxyProject){let e={};function t(t,r){const o=i.stat(t,r);if(o)return o;const p=i.getTargetPath(t,r);for(const i in e)if(p.startsWith(i))return e[i].stat(path_1.default.posix.relative(i,p))}proxyProject=new Proxy(i,{get:(i,e,r)=>"stat"===e?t:Reflect.get(i,e,r)}),proxyProject.addResolver=i=>{(0,reactiveCache_1.cleanReactiveCache)(),e[i.root]=i},proxyProject.removeResolver=i=>{(0,reactiveCache_1.cleanReactiveCache)(),delete e[i.root]},proxyProject.clearResolver=()=>{e={},(0,reactiveCache_1.cleanReactiveCache)()}}return proxyProject}function getCacheBaseKey(i){const t=`${i.miniprogramRoot}|${i.pluginRoot}|${i.summerPlugins.join(",")}`;return(0,tools_1.generateMD5)(t)}class SummerCompiler{constructor(i,t,e){this.project=i,this.cachePath=t,this.options=e,this.proxyProject=initProxyProjectForJSON(i),this.projectPath=i.projectPath,this.persistCache=new persist_cache_1.default(t,getCacheBaseKey(e)),this.initPlugins(),this.initAppGraph(),"miniProgramPlugin"===this.options.compileType&&this.initPluginGraph()}initPlugins(){this.plugins=this.options.summerPlugins.map(i=>{let t,e={};return"string"==typeof i?t=i:(t=i[0],e=i[1]),(0,initPlugin_1.initPlugin)(t,this.project.projectPath,e)})}initAppGraph(){this.appGraph=new appgraph_1.AppGraph({type:"miniprogram",root:this.project.miniprogramRoot,persistCache:this.persistCache,plugins:this.plugins,compiler:this})}initPluginGraph(){this.pluginGraph=new plugingraph_1.PluginGraph({type:"plugin",root:this.project.pluginRoot,persistCache:this.persistCache,plugins:this.plugins,compiler:this})}updateOptions(i){var t,e;const r=this.options;if(this.options=i,this.persistCache.updateBaseCacheKey(getCacheBaseKey(i)),!(0,lodash_1.isEqual)(this.options.summerPlugins,r.summerPlugins))return this.initPlugins(),this.appGraph.destroy(),null===(t=this.pluginGraph)||void 0===t||t.destroy(),this.initAppGraph(),void("miniProgramPlugin"===this.options.compileType&&this.initPluginGraph());this.options.compileType!==r.compileType&&("miniProgramPlugin"===this.options.compileType?this.initPluginGraph():(null===(e=this.pluginGraph)||void 0===e||e.destroy(),this.pluginGraph=void 0)),this.appGraph.root!==this.project.miniprogramRoot&&(this.appGraph.destroy(),this.initAppGraph()),this.pluginGraph&&this.pluginGraph.root!==this.project.pluginRoot&&(this.pluginGraph.destroy(),this.initPluginGraph())}destroy(){var i;this.appGraph.destroy(),null===(i=this.pluginGraph)||void 0===i||i.destroy(),this.proxyProject.clearResolver()}getStatus(){const i=(0,plugin_driver_1.genResovleExtConf)(this.plugins),t={},e=new Set;for(const r of["json","js","wxml","wxss","wxs"])t[r]={exts:i[r].reverse()},i[r].forEach(i=>{e.add(i)});return{codeExts:Array.from(e.keys()),codeConf:t}}clearCache(){var i;this.appGraph.clearCache(),null===(i=this.pluginGraph)||void 0===i||i.clearCache(),this.persistCache.clean(),(0,reactiveCache_1.cleanReactiveCache)()}async getConf({graphId:i},t){if("miniprogram"===i){return await this.appGraph.getConf(t)}if("plugin"===i){return await this.pluginGraph.getConf(t)}throw new Error("no support getConf for "+i)}async getCode(i,t){if("miniprogram"===i.graphId){return await this.appGraph.getDevCode(t,{package:i.package})}if("plugin"===i.graphId){return await this.pluginGraph.getDevCode(t)}throw new Error("no support getCode for "+i.graphId)}async getLocalFileList(i){if("miniprogram"===i)return await this.appGraph.getLocalFileList();if("plugin"===i)return await this.pluginGraph.getLocalFileList();throw new Error("no support getCode for "+i)}async compileSingleCode(i,t){if("miniprogram"===i.graphId){return await this.appGraph.compileSingleCode(i.filePath,i.sourceCode)}if("plugin"===i.graphId){return await this.pluginGraph.compileSingleCode(i.filePath,i.sourceCode)}throw new Error("no support getCode for "+i.graphId)}async compile(i,t){const e=await t.run(locales_1.default.config.SUMMER_COMPILE_MINIPROGRAM.format(),()=>this.appGraph.compile(t));if("miniProgram"===this.project.type)return e["project.config.json"]=JSON.stringify({miniprogramRoot:"",__compileDebugInfo__:{useSummer:!0}}),e;if("miniProgramPlugin"===this.project.type){const i={},r=await(await t.run(locales_1.default.config.SUMMER_COMPILE_PLUGIN.format(),()=>this.pluginGraph.compile(t)));return Object.keys(e).forEach(t=>{i[path_1.default.posix.join(this.project.miniprogramRoot,t)]=e[t]}),Object.keys(r).forEach(t=>{i[path_1.default.posix.join(this.project.pluginRoot,t)]=r[t]}),i["project.config.json"]=JSON.stringify({miniprogramRoot:this.project.miniprogramRoot,pluginRoot:this.project.pluginRoot,__compileDebugInfo__:{useSummer:!0}}),i}throw new Error("no support compile for  "+this.project.type)}}exports.SummerCompiler=SummerCompiler;