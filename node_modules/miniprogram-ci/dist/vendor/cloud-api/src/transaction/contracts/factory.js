"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.allContractRecorder=exports.allContractsRecords=void 0;const validator_1=require("../../utils/validator"),eventemitter3_1=require("eventemitter3");exports.allContractsRecords=[],exports.allContractRecorder=new eventemitter3_1.EventEmitter,global.env&&global.env.isDev&&global.env.transact&&(global.allContractsRecords=exports.allContractsRecords);const noop=(...t)=>{};class TransactionContract extends eventemitter3_1.EventEmitter{constructor(t,r,o,e,a={}){super(),this.inputTypeName=t,this.outputTypeName=r,this.outputValidation=o,this.getHttpAgentIdentity=e,this.options=a,this.validator=new validator_1.Validator(r,o)}outputTransformationThrows(t,r){return this.options.outputTransformationThrows?this.options.outputTransformationThrows(t,r):t}inputTransformation(t,r){return this.options.inputTransformation?this.options.inputTransformation(t,r):t}validOutput(t){try{return this.validator.validThrows(t),!0}catch(t){return!1}}validOutputThrows(t){this.validator.validThrows(t)}commitRecord(t,r){if(!global.env||!global.env.transact)return;const o={timestamps:t.timestamps,rawOutput:t.rawOutput,input:t.input,maybeBrokenOutput:t.output,error:t.error,isPoll:Boolean(r),httpAgentIdentity:t.httpAgentIdentity};this.emit("record",o);const e=Object.assign({inputName:this.inputTypeName},o);exports.allContractsRecords.push(e),exports.allContractRecorder.emit("record",e)}}exports.default=TransactionContract;