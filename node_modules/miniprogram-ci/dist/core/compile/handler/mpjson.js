"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.compileJSON=void 0;const tslib_1=require("tslib"),path_1=(0,tslib_1.__importDefault)(require("path")),app_1=require("../../json/app"),getExtJSON_1=require("../../json/app/getExtJSON"),common_1=require("../../../utils/common"),getPageJSON_1=require("../../json/page/getPageJSON"),taskstatus_1=require("../../../utils/taskstatus"),projectconfig_1=require("../../json/projectconfig"),common_2=require("../common");async function compilePageJSON(t,e,o,a){const{onProgressUpdate:s=(()=>{})}=a,n={};for(const a of e){const e=new taskstatus_1.TaskStatus(a);s(e),n[path_1.default.posix.join(o,a+".json")]=await(0,getPageJSON_1.getPageJSON)(t,{miniprogramRoot:o,pagePath:a}),e.done(),s(e)}return n}async function compileJSON(t,e){const{onProgressUpdate:o=(()=>{})}=e,a=await(0,projectconfig_1.getProjectConfigJSON)(t),{miniprogramRoot:s=""}=a;let n=new taskstatus_1.TaskStatus("app.json");o(n);const i=await(0,app_1.getAppJSON)(t);let r;n.done(),o(n);const p=await t.attr();(null==p?void 0:p.platform)&&(n=new taskstatus_1.TaskStatus("ext.json"),o(n),r=await(0,getExtJSON_1.getExtJSON)(t),n.done(),o(n));const c=(0,common_1.getAllPages)(i),l=await compilePageJSON(t,c,s,e),g=new Set(["app.json","ext.json"].concat(c.map(t=>t+".json"))),u=(0,common_1.getAllTargetTypeFilesWithOtherTypeFilesOfSameName)(t,".json",[".wxml",".js"],s).filter(common_2.isNotIgnoredByProjectConfig.bind(null,a,s)).filter(t=>{const e=path_1.default.posix.relative(s,t);return!g.has(e)}).map(t=>path_1.default.posix.relative(s,t).replace(/\.json$/,"")),m=await compilePageJSON(t,u,s,e);u.forEach(t=>g.add(t+".json"));const j=t.getFileList(s,".json").filter(common_2.isNotIgnoredByProjectConfig.bind(null,a,s)).filter(t=>{const e=path_1.default.posix.relative(s,t);return!g.has(e)}),_=await(0,common_2.compileOther)(t,j,e),f=Object.assign(Object.assign(Object.assign({[path_1.default.posix.join(s,"app.json")]:i},l),m),_);r&&(f[path_1.default.posix.join(s,"ext.json")]=r);const O={};for(const t in f){const e=f[t];let o;o="[object Uint8Array]"===Object.prototype.toString.call(e)?e.toString():JSON.stringify(e),O[t]=o}return O}exports.compileJSON=compileJSON;