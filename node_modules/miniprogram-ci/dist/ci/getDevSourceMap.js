"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getDevSourceMap=void 0;const tslib_1=require("tslib"),fs_1=(0,tslib_1.__importDefault)(require("fs")),path_1=(0,tslib_1.__importDefault)(require("path")),log_1=(0,tslib_1.__importDefault)(require("../utils/log")),request_1=require("../utils/request"),url_config_1=require("../utils/url_config"),sign_1=require("../utils/sign"),JsZip=require("jszip"),ERR_MSG_PREFIX="download source map failed:";async function getDevSourceMap(e){return new Promise(async(r,t)=>{const{project:o,robot:a}=e;let{sourceMapSavePath:i}=e;if(!o){const e="params project is requried";return log_1.default.error(e),void t(e)}if("number"!=typeof a||Math.round(a)>30||Math.round(a)<=0){const e="params robot is invalid";return log_1.default.error(e),void t(e)}if(!i){const e="params sourceMapSavePath is invalid";return log_1.default.error(e),void t(e)}path_1.default.isAbsolute(i)||(i=path_1.default.join(process.cwd(),i));const s=await(0,sign_1.getSignature)(o.privateKey,o.appid),{body:u}=await(0,request_1.request)({url:url_config_1.GET_DEV_SOURCE_MAP,method:"post",gzip:!0,body:JSON.stringify({appid:o.appid,signature:s,robot:a}),headers:{"content-type":"application/json"}});let l;try{l=JSON.parse(u)}catch(e){const r=ERR_MSG_PREFIX+" resp body is not a valid json";return log_1.default.error(r),void t(r)}const n=l.data;if(!Array.isArray(n.sourcemap_list)){const e=`${ERR_MSG_PREFIX} respData.sourcemap_list, respData: ${JSON.stringify(n)}`;return log_1.default.error(e),void t(e)}const p=n.sourcemap_list,_=new JsZip;try{p.forEach(e=>{_.folder(path_1.default.dirname(e.fullpath)).file(path_1.default.basename(e.fullpath),e.sourcemap)})}catch(e){const r=ERR_MSG_PREFIX+" source map add folder or add file error";return log_1.default.error(r),void t(r)}_.generateAsync({type:"nodebuffer"}).then(e=>{try{fs_1.default.writeFileSync(i,e),r(void 0)}catch(e){const r=`${ERR_MSG_PREFIX} save source map to ${i} failed. Error detail: ${JSON.stringify(e)}`;return log_1.default.error(r),void t(r)}r(e)}).catch(()=>{const e=ERR_MSG_PREFIX+" source map generate zip error";log_1.default.error(e),t(e)})})}exports.getDevSourceMap=getDevSourceMap;